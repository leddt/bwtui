name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tags starting with 'v' (e.g., v1.0.0, v2.1.3)

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cross-compilation toolchain for Windows
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Add Windows target to Rust
        run: rustup target add x86_64-pc-windows-gnu

      - name: Build for Linux (x86_64)
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Build for Windows (x86_64)
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Strip binaries (Linux)
        run: strip target/x86_64-unknown-linux-gnu/release/bwtui

      - name: Strip binaries (Windows)
        run: x86_64-w64-mingw32-strip target/x86_64-pc-windows-gnu/release/bwtui.exe

      - name: Create release archive (Linux)
        run: |
          cd target/x86_64-unknown-linux-gnu/release
          tar -czf bwtui-linux-x86_64.tar.gz bwtui
          cd ../../..
          mv target/x86_64-unknown-linux-gnu/release/bwtui-linux-x86_64.tar.gz .

      - name: Create release archive (Windows)
        run: |
          cd target/x86_64-pc-windows-gnu/release
          zip -r bwtui-windows-x86_64.zip bwtui.exe
          cd ../../..
          mv target/x86_64-pc-windows-gnu/release/bwtui-windows-x86_64.zip .

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Changes in ${{ steps.get_version.outputs.VERSION }}
            
            ### Downloads
            - **Linux (x86_64)**: `bwtui-linux-x86_64.tar.gz`
            - **Windows (x86_64)**: `bwtui-windows-x86_64.zip`
            
            ### Installation
            **Linux:**
            ```bash
            tar -xzf bwtui-linux-x86_64.tar.gz
            sudo mv bwtui /usr/local/bin/
            ```
            
            **Windows:**
            Extract the zip file and run `bwtui.exe`
          files: |
            bwtui-linux-x86_64.tar.gz
            bwtui-windows-x86_64.zip
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}
